
#tuple
#immutable(can't be changed)

tup1=(1,2,3,4)#this is called as packing
tup2=(5,6,7,8)
a=30
c=(10,)#to make a tuple with single element comma is required
#if there are no paranthesis python will consider it as a tuple if there are multiple values seperated by a comma

print(type(a))
print(type(c))
#tup1[2]=10
print(len(tup1))
print(tup1+tup2)
print(tup1*4)
print(4 in tup1)
print(4 not in tup1)

for i in range(len(tup1)) :
    print (tup1[i])
  
if(tup1>tup2):
    print("true")
else:
    print("false")
print(tup1<tup2)#only checks the values at index 0 and accordingly gives output if they are equal then it checks furthe
print(max(tup1))
print(min(tup1))
#typecast string into tuple and list
tup3=tuple("hello")
print(tup3)
l2=list("hello")
print(l2)

#brackets are there but not a tuple
(v1,v2,v3)=(1/2*3,2+6,3*9)#this is called as unpacking
print(v1,v2,v3)
print(type(v1))
t1=(100,200,300)
v1,v2,v3=t1
print (v1,v2,v3)
print(type(t1))
print(t1)
print(tup1.index(3))#to get index of the digit passed
print(tup1.count(3))#to get how many times it is in the list

result=[i**2 for i in range(1,11)]#list to store squares from 1 to 10
print(result)

res=[]
l1=[1,2,3]
l2=[4,5,6]
for i in range (len(l1)):
    res.append((l1[i],l2[i]))
print(res)


tup1[2]
tup1[1:3]
tup1[1:10:2]

l1=["1","2","3"]
print(l1.pop())
print(l1)
print(l1.pop())
print(l1)
